(env-data {"disable-marmalade-v1":true})
(load "kadena_repl_sandbox/kda-env/init.repl")
(load "init/init-marmalade-ng.repl")
(load "init/init-bridge.repl")

(begin-tx "Load the stub contract")
(env-data {'example_owner:"alice", 'example_keyset:["alice-key"] })
(load "stubs/generic-ledger.pact")
(commit-tx)


(begin-tx "Create a NG token")
; We mint on both NG ledgers but only ledger A will work (because declared in the generic-ledger)

(env-sigs [{'key:"create", 'caps:[(marmalade-ng-A.ledger.ENFORCE-RESERVED), (marmalade-ng-B.ledger.ENFORCE-RESERVED) ]}])
(env-data {'ks-c: ["create"]})

(print (+ "NG Token ID: => " (marmalade-ng-A.ledger.create-token-id (read-keyset 'ks-c) "https://dog-1" )))

(env-data {'ks-c: ["create"],
           'marmalade_bridge_inbound:{'guard:{'pred:"keys-all", 'keys:["creator"]},
                                      'source:{'ledger:"generic-ledger",
                                              'token:"t:my-token",
                                              'chain:""}}
          })

(marmalade-ng-A.ledger.create-token "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw" 1 "https://dog-1"
                                    [marmalade-ng-bridge.policy-bridge-inbound]
                                    (read-keyset 'ks-c))

(marmalade-ng-B.ledger.create-token "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw" 1 "https://dog-1"
                                    [marmalade-ng-bridge-B.policy-bridge-inbound]
                                    (read-keyset 'ks-c))


(expect-failure "The NG token is not mintable"
  (marmalade-ng-A.ledger.mint "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw" "alice" (read-keyset 'alice-ks) 1.0))


(expect "Total supply of NG token should be 0.0" 0.0 (marmalade-ng-A.ledger.total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))
(expect "Total supply of NG token should be 0.0" 0.0 (marmalade-ng-B.ledger.total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))
(commit-tx)


; Bridge from V1 to NG
(begin-tx)
(use marmalade-ng-bridge.bridge)
(use marmalade-ng-A.ledger)
(use free.util-strings)

(expect "Total supply of NG token should be 0.0" 0.0 (total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))

(bridge-generic-to-ng generic-ledger
                      marmalade-ng-A.ledger
                     "t:my-token"
                     "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw")

(print "")
(print "Balances for Alice:")
(print (join "\n" (map (to-string) (list-balances "alice"))))

(expect "Total supply of NG token should be 1.0" 1.0 (total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))
; We rollback to do more tests
(rollback-tx)

; We try to bridge to Ledger NG -B should not work
(begin-tx)
(use marmalade-ng-bridge.bridge)
(use marmalade-ng-A.ledger)
(use free.util-strings)

(expect "Total supply of NG token should be 0.0" 0.0 (total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))

(expect-failure "Ledger not granted by V1 policy" "require-capability: not granted"
                (bridge-generic-to-ng generic-ledger
                                      marmalade-ng-B.ledger
                                      "t:my-token"
                                      "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))
; We rollback to do more tests
(rollback-tx)


(begin-tx)
(use marmalade-ng-bridge.bridge)
(use marmalade-ng-A.ledger)
(use free.util-strings)
(use marmalade-ng-bridge.policy-bridge-inbound)


(expect "Total supply of NG token should be 0.0" 0.0 (total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))

; We change the inbound target
(env-sigs [{'key:"creator", 'caps:[(UPDATE-BRIDGE "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw")]}])

; Set a bad ledger source
(set-source "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"
            {'ledger:"another-ledger", 'token:"t:my-token", 'chain:""})

(expect-failure "Ledger not granted by V1 policy" "require-capability: not granted"
                (bridge-generic-to-ng generic-ledger
                                      marmalade-ng-A.ledger
                                      "t:my-token"
                                      "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))
; We rollback to do more tests
(rollback-tx)

(begin-tx)
(use marmalade-ng-bridge.bridge)
(use marmalade-ng-A.ledger)
(use free.util-strings)
(use marmalade-ng-bridge.policy-bridge-inbound)


(expect "Total supply of NG token should be 0.0" 0.0 (total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))

; We change the inbound target
(env-sigs [{'key:"creator", 'caps:[(UPDATE-BRIDGE "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw")]}])
; Set a bad token
(set-source "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"
            {'ledger:"generic-ledger", 'token:"t:another-token", 'chain:""})

(expect-failure "Ledger not granted by V1 policy" "require-capability: not granted"
                (bridge-generic-to-ng generic-ledger
                                      marmalade-ng-A.ledger
                                      "t:my-token"
                                      "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))
; We rollback to do more tests
(rollback-tx)

;;; And finally, we bridge for good
(begin-tx)
(use marmalade-ng-bridge.bridge)
(use marmalade-ng-A.ledger)
(use free.util-strings)
(use marmalade-ng-bridge.policy-bridge-inbound)

(expect "Total supply of NG token should be 0.0" 0.0 (total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))

; We change the inbound target
(env-sigs [{'key:"creator", 'caps:[(UPDATE-BRIDGE "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw")]}])
; Set a bad token
(set-source "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"
            {'ledger:"generic-ledger", 'token:"t:my-token", 'chain:""})


(bridge-generic-to-ng generic-ledger
                      marmalade-ng-A.ledger
                      "t:my-token"
                      "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw")

(print "")
(print (join "\n" (map (to-string) (list-balances "alice"))))
(print "Balances for Alice:")

(expect "Total supply of NG token should be 1.0" 1.0 (total-supply "t:DVSCmFHKCJZHnAB4MISNPaW_0C1WMAuswSpDMJV0HDw"))

(commit-tx)
